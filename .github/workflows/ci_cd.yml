name: ci-cd

on:
  push:
    tags:
      - '*'

jobs:

  build_test_push:
    runs-on: ubuntu-latest
    environment: Production
    services:
      postgres:
        image: postgres:13.2
        env:
          POSTGRES_USER: tester
          POSTGRES_PASSWORD: mY6vvC82bC_vdQthMzi7DnghZopRAjmD
          POSTGRES_DB: ingest
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.1
        with:
          path: ingest

      - name: Checkout Common
        uses: actions/checkout@v3
        with:
          repository: tiki/common
          path: common

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Install CLI
        uses: dopplerhq/cli-action@v1

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install --yes postgresql-client

      - name: Create Tables
        run: psql -h localhost -d ingest -U tester -f ingest/database/create_tables.sql
        env:
          PGPASSWORD: mY6vvC82bC_vdQthMzi7DnghZopRAjmD

      - name: Maven Install Common
        run: |
          cd common
          mvn install

      - name: Maven Package Ingest
        run: |
          cd ingest
          doppler run -c tst -- mvn clean package
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_ST }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            registry.digitalocean.com/tiki/ingest
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_PAT }}

      - name: Registry login
        run: doctl registry login --expiry-seconds 600

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ingest/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          build-args: |
            JAR_FILE=target/*.jar
            DOPPLER_ST=${{ secrets.DOPPLER_ST }}

  deploy_to_infra:
    runs-on: ubuntu-latest
    environment: Production
    needs: [build_test_push]

    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt
        working-directory: infra

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: infra

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
        working-directory: infra